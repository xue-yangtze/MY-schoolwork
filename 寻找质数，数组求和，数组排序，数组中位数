#include<stdio.h>
#include<math.h>
#define SIZE 1500
long long sumpx(long long *px, int size);
void paixu(long long *px,int size);
void putpaixu(const long long *px,int size);
void put_zhongweishu(const long long *px,int size);

int main(){
	long long px[SIZE];//排序 
	int p=0;
	long long root=0;	//均方根 
	long long pfh=0;	//平方和 
	long long m;		//六位数 
	int a1,a2,a3,a4,a5,a6;	//六个位 
	int count=0;	//总数 
	for(a1=1;a1<=8;a1++){
		for(a2=1;a2<=8;a2++){
			if(a1!=a2){
				for(a3=1;a3<=8;a3++){
					if(a1!=a3&&a2!=a3){
						for(a4=1;a4<=8;a4++){
							if(a1!=a4&&a2!=a4&&a3!=a4){
								for(a5=1;a5<=8;a5++){
									if(a1!=a5&&a2!=a5&&a3!=a5&&a4!=a5){
										for(a6=1;a6<=8;a6++){
											if(a1!=a6&&a2!=a6&&a3!=a6&&a4!=a6&&a5!=a6){
												m=a6+a5*10+a4*100+a3*1000+a2*10000+a1*100000;
												int i;
												int k=sqrt(m);
												for(i=2;i<=k;i++){
													if(m%i==0) break; 
												}
												if(i==k+1){
													px[p]=m;
													p++;
													pfh=pfh+m*m;
													count++;
												}	
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}	
	root=sqrt(pfh/count);
//	printf("count=%d\n",count);
	printf("总和=%lld\n",sumpx(px,count));
	printf("平方和=%lld\n",pfh);
	printf("均方根=%lld\n",root);
	paixu(px,count);
	putpaixu(px,count);
	put_zhongweishu(px,count);
	return 0;
}

long long sumpx(long long *px, int size){
	int sum=0;
	for(int i=0;i<size;i++){
		sum+=px[i];
	}
	return sum;
}

void paixu(long long *px,int size){				//从大到小 
	int i;
	int n;
	for(n=size;n>0;n--){
		for(i=0;i<n;i++){
			if(px[i]<px[i+1]){
				long long t;
				t=px[i];
				px[i]=px[i+1];
				px[i+1]=t;
			}
		}
	}
}

void putpaixu(const long long *px,int size){
	int i;
	for(i=size-1;i>=0;i--){
		printf("%lld ",px[i]);
	}
}

void put_zhongweishu(const long long *px,int size){
	int zws=size/2;
	if(size%2==0){
		printf("\n中位数：%lld,%lld",px[zws],px[zws+1]);
	}else{
		printf("\n中位数：%lld",px[zws+1]);
	}
}
